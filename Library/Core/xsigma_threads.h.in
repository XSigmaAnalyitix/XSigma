/*
 * Some parts of this implementation were inspired by code from VTK
 * (The Visualization Toolkit), distributed under a BSD-style license.
 * See LICENSE for details.
 */

#ifndef __xsigma_threads_h__
#define __xsigma_threads_h__

/* Threading system.  */
#cmakedefine XSIGMA_USE_PTHREADS
#cmakedefine XSIGMA_USE_WIN32_THREADS

// clang-format off
#define XSIGMA_MAX_THREADS @XSIGMA_MAX_THREADS@
// clang-format on

// If XSIGMA_USE_PTHREADS is defined, then the multithreaded
// function is of type void *, and returns nullptr
// Otherwise the type is void which is correct for WIN32
#ifdef XSIGMA_USE_PTHREADS
#define __XSIGMA_THREAD_RETURN_VALUE__ nullptr
#define __XSIGMA_THREAD_RETURN_TYPE__ void*
#endif

#ifdef XSIGMA_USE_WIN32_THREADS
#define __XSIGMA_THREAD_RETURN_VALUE__ 0
#define __XSIGMA_THREAD_RETURN_TYPE__ xsigmaWindowsDWORD __stdcall
#endif

#if !defined(XSIGMA_USE_PTHREADS) && !defined(XSIGMA_USE_WIN32_THREADS)
#define __XSIGMA_THREAD_RETURN_VALUE__
#define __XSIGMA_THREAD_RETURN_TYPE__ void
#endif

#endif
